# Generated by Django 5.2 on 2025-06-26 06:12

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                ("plan_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "stripe_product_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe product ID for this plan",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "plan_name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the subscription plan",
                        max_length=255,
                    ),
                ),
                (
                    "plan_description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of the plan",
                        null=True,
                    ),
                ),
                (
                    "plan_tier",
                    models.CharField(
                        blank=True,
                        help_text="Tier level of the plan",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_trial",
                    models.BooleanField(
                        default=False, help_text="Whether this is a trial plan"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the plan is currently active"
                    ),
                ),
                (
                    "meta_data",
                    models.JSONField(
                        blank=True,
                        help_text="Additional metadata for the plan",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Subscription Plan",
                "verbose_name_plural": "Subscription Plans",
                "ordering": ["plan_name"],
                "indexes": [
                    models.Index(
                        fields=["is_active"], name="plans_subsc_is_acti_9680e5_idx"
                    ),
                    models.Index(
                        fields=["plan_tier"], name="plans_subsc_plan_ti_1134cb_idx"
                    ),
                    models.Index(
                        fields=["is_trial"], name="plans_subsc_is_tria_a27f14_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PlanPrice",
            fields=[
                ("price_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "stripe_price_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe price ID for this plan",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "price_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Price amount for the plan",
                        max_digits=10,
                    ),
                ),
                (
                    "price_currency",
                    models.CharField(
                        default="USD",
                        help_text="Currency for the plan price",
                        max_length=10,
                    ),
                ),
                (
                    "price_period",
                    models.CharField(
                        blank=True,
                        choices=[("monthly", "Monthly"), ("yearly", "Yearly")],
                        help_text="Period of the price",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "price_duration_days",
                    models.IntegerField(
                        choices=[
                            (30, "30 days"),
                            (90, "90 days"),
                            (180, "180 days"),
                            (365, "365 days"),
                        ],
                        default=30,
                        help_text="Duration of the price in days",
                    ),
                ),
                (
                    "price_type",
                    models.CharField(
                        blank=True,
                        choices=[("one_time", "One Time"), ("recurring", "Recurring")],
                        help_text="Type of the price",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the price is active"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Whether the price is deleted"
                    ),
                ),
                (
                    "meta_data",
                    models.JSONField(
                        blank=True,
                        help_text="Additional metadata for the price",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="plans.subscriptionplan",
                    ),
                ),
            ],
            options={
                "ordering": ["price_amount"],
            },
        ),
        migrations.CreateModel(
            name="PlanFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feature_name",
                    models.CharField(
                        db_index=True, help_text="Name of the feature", max_length=255
                    ),
                ),
                (
                    "feature_type",
                    models.CharField(
                        blank=True,
                        help_text="Type of the feature",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "feature_description",
                    models.TextField(
                        blank=True, help_text="Description of the feature", null=True
                    ),
                ),
                (
                    "feature_limit",
                    models.IntegerField(
                        blank=True, help_text="Usage limit for the feature", null=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the feature is active"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Whether the feature is deleted"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features",
                        to="plans.subscriptionplan",
                    ),
                ),
            ],
            options={
                "ordering": ["feature_name"],
            },
        ),
        migrations.CreateModel(
            name="UserSubscription",
            fields=[
                (
                    "subscription_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                (
                    "plan_name",
                    models.CharField(
                        blank=True,
                        help_text="Name of the plan",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe subscription ID for this subscription",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "usage_start_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Start date of subscription",
                    ),
                ),
                (
                    "usage_end_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="End date of subscription (calculated automatically)",
                        null=True,
                    ),
                ),
                (
                    "tokens_usage",
                    models.BigIntegerField(
                        default=0,
                        help_text="Total tokens used in this subscription period",
                    ),
                ),
                (
                    "conversations_usage",
                    models.BigIntegerField(
                        default=0,
                        help_text="Total conversations used in this subscription period",
                    ),
                ),
                (
                    "agents_usage",
                    models.BigIntegerField(
                        default=0,
                        help_text="Total agents used in this subscription period",
                    ),
                ),
                (
                    "integrations_usage",
                    models.BigIntegerField(
                        default=0,
                        help_text="Total integrations used in this subscription period",
                    ),
                ),
                (
                    "is_trial",
                    models.BooleanField(
                        default=False, help_text="Whether the subscription is a trial"
                    ),
                ),
                (
                    "is_trial_expired",
                    models.BooleanField(
                        default=False, help_text="Whether the trial has expired"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether the subscription is active"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Whether the subscription is deleted"
                    ),
                ),
                (
                    "meta_data",
                    models.JSONField(
                        blank=True,
                        help_text="Additional metadata for the subscription",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "price_id",
                    models.ForeignKey(
                        help_text="Price associated with this subscription",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="plans.planprice",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who owns this subscription",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Subscription",
                "verbose_name_plural": "User Subscriptions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StripeCustomer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe customer ID for this customer",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who owns this Stripe customer",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stripe_customers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Stripe Customer",
                "verbose_name_plural": "Stripe Customers",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["stripe_customer_id"],
                        name="plans_strip_stripe__6542d5_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="planprice",
            index=models.Index(
                fields=["price_amount"], name="plans_planp_price_a_12a2db_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="planprice",
            unique_together={("plan", "stripe_price_id")},
        ),
        migrations.AddIndex(
            model_name="planfeature",
            index=models.Index(
                fields=["is_active"], name="plans_planf_is_acti_753b91_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="planfeature",
            index=models.Index(
                fields=["feature_name"], name="plans_planf_feature_bd5347_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="planfeature",
            index=models.Index(
                fields=["feature_type"], name="plans_planf_feature_c3f7eb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="planfeature",
            unique_together={("plan", "feature_name")},
        ),
        migrations.AddIndex(
            model_name="usersubscription",
            index=models.Index(
                fields=["is_active"], name="plans_users_is_acti_443412_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersubscription",
            index=models.Index(
                fields=["user", "is_active"], name="plans_users_user_id_c4196f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersubscription",
            index=models.Index(
                fields=["stripe_subscription_id"], name="plans_users_stripe__028053_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersubscription",
            index=models.Index(
                fields=["usage_start_date"], name="plans_users_usage_s_bd1422_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersubscription",
            index=models.Index(
                fields=["usage_end_date"], name="plans_users_usage_e_a850ae_idx"
            ),
        ),
    ]
